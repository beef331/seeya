nimTitle	seeya	seeya.html	module seeya		0
nim	OpaqueSeq	seeya.html#OpaqueSeq	type OpaqueSeq		75
nim	OpaqueString	seeya.html#OpaqueString	type OpaqueString		77
nim	OpaqueRef	seeya.html#OpaqueRef	type OpaqueRef		79
nim	Inferred	seeya.html#Inferred	Passes.Inferred		82
nim	PassesByRef	seeya.html#PassesByRef	Passes.PassesByRef		82
nim	PassesByCopy	seeya.html#PassesByCopy	Passes.PassesByCopy		82
nim	Passes	seeya.html#Passes	enum Passes		82
nim	passesByRef	seeya.html#passesByRef,typedesc[]	proc passesByRef(T: typedesc[object]): bool		114
nim	TypedNimNode	seeya.html#TypedNimNode	type TypedNimNode		118
nim	headers	seeya.html#headers	var headers		121
nim	makeHeader	seeya.html#makeHeader.m,staticstring	macro makeHeader(location: static string)		127
nim	addType	seeya.html#addType,typedesc	proc addType(T: typedesc)		150
nim	formatName	seeya.html#formatName,string	proc formatName(s: string): string		157
nim	setFormatter	seeya.html#setFormatter,staticstring	proc setFormatter(formatter: static string)		160
nim	expose	seeya.html#expose.m,untyped	macro expose(t: untyped): untyped		345
nim	toCName	seeya.html#toCName,string	proc toCName(s: string): string		348
nim	toTypeDefs	seeya.html#toTypeDefs,typedesc[]	proc toTypeDefs(T: typedesc[object]): string		353
nim	toCType	seeya.html#toCType,typedesc[],string,bool	proc toCType(T: typedesc[object]; name: string; procArg: bool): string		369
nim	toTypeDefs	seeya.html#toTypeDefs,typedesc[]_2	proc toTypeDefs(T: typedesc[tuple]): string		384
nim	toCType	seeya.html#toCType,typedesc[T],string,bool	proc toCType[T: tuple](t: typedesc[T]; name: string; procArg: bool): string		409
nim	toTypeDefs	seeya.html#toTypeDefs,typedesc[T]	proc toTypeDefs[T: not (object or distinct or tuple or enum)](__536871153: typedesc[T]): string		415
nim	toTypeDefs	seeya.html#toTypeDefs,typedesc[T]_2	proc toTypeDefs[T: distinct](__536871158: typedesc[T]): string		418
nim	toCType	seeya.html#toCType,typedesc[T],string,bool_2	proc toCType[T: distinct](__536871163: typedesc[T]; name: string; procArg: bool): string		422
nim	toCType	seeya.html#toCType,typedesc[PtrOrRef[T]],string,bool	proc toCType[T](__536871179: typedesc[PtrOrRef[T]]; name: string; procArg: bool): string		432
nim	toCType	seeya.html#toCType,typedesc[cstring],string,bool	proc toCType(__536871185: typedesc[cstring]; name: string; procArg: bool): string		438
nim	toCType	seeya.html#toCType,typedesc[array[Idx,T]],string,bool	proc toCType[Idx, T](__536871193: typedesc[array[Idx, T]]; name: string;\n                procArg: bool): string		441
nim	toCType	seeya.html#toCType,typedesc[set[T]],string,bool	proc toCType[T](__536871200: typedesc[set[T]]; name: string; procArg: bool): string		448
nim	toCType	seeya.html#toCType,typedesc[T],string,bool_3	proc toCType[T: SomeInteger](__536871208: typedesc[T]; name: string; procArg: bool): string		461
nim	toCType	seeya.html#toCType,typedesc[T],string,bool_4	proc toCType[T: range](__536871220: typedesc[T]; name: string; procArg: bool): string		473
nim	toCType	seeya.html#toCType,typedesc[openArray[T]],string,bool	proc toCType[T](__536871227: typedesc[openArray[T]]; name: string; procArg: bool): string		476
nim	toTypeDefs	seeya.html#toTypeDefs,typedesc[seq[T]]	proc toTypeDefs[T](__536871234: typedesc[seq[T]]): string		482
nim	toCType	seeya.html#toCType,typedesc[seq[T]],string,bool	proc toCType[T](__536871241: typedesc[seq[T]]; name: string; procArg: bool): string		508
nim	toTypeDefs	seeya.html#toTypeDefs,typedesc[string]	proc toTypeDefs(__536871247: typedesc[string]): string		513
nim	toCType	seeya.html#toCType,typedesc[string],string,bool	proc toCType(__536871253: typedesc[string]; name: string; procArg: bool): string		539
nim	toCType	seeya.html#toCType,typedesc[T],string,bool_5	proc toCType[T: float or float64](__536871260: typedesc[T]; name: string;\n                             procArg: bool): string		544
nim	toCType	seeya.html#toCType,typedesc[float32],string,bool	proc toCType(__536871266: typedesc[float32]; name: string; procArg: bool): string		547
nim	toCType	seeya.html#toCType,typedesc[bool],string,bool	proc toCType(__536871272: typedesc[bool]; name: string; procArg: bool): string		550
nim	toCType	seeya.html#toCType,typedesc[char],string,bool	proc toCType(__536871278: typedesc[char]; name: string; procArg: bool): string		554
nim	toTypeDefs	seeya.html#toTypeDefs,typedesc[OpaqueRef[T]]	proc toTypeDefs[T](__536871285: typedesc[OpaqueRef[T]]): string		557
nim	toCType	seeya.html#toCType,typedesc[OpaqueRef[T]],string,bool	proc toCType[T](__536871290: typedesc[OpaqueRef[T]]; name: string; isProcArg: bool): string		565
nim	toTypeDefs	seeya.html#toTypeDefs,typedesc[OpaqueString]	proc toTypeDefs(__536871296: typedesc[OpaqueString]): string		571
nim	toCType	seeya.html#toCType,typedesc[OpaqueString],string,bool	proc toCType(__536871300: typedesc[OpaqueString]; name: string; isProcArg: bool): string		577
nim	toTypeDefs	seeya.html#toTypeDefs,typedesc[OpaqueSeq[T]]	proc toTypeDefs[T](__536871307: typedesc[OpaqueSeq[T]]): string		583
nim	toCType	seeya.html#toCType,typedesc[OpaqueSeq[T]],string,bool	proc toCType[T](__536871312: typedesc[OpaqueSeq[T]]; name: string; isProcArg: bool): string		589
nim	toTypeDefs	seeya.html#toTypeDefs,typedesc[T]_3	proc toTypeDefs[T: enum](__536871342: typedesc[T]): string		600
nim	toCType	seeya.html#toCType,typedesc[T],string,bool_6	proc toCType[T: enum](__536871351: typedesc[T]; name: string; procArg: bool): string		616
nim	toTypeDefs	seeya.html#toTypeDefs,typedesc[proc]	proc toTypeDefs(T: typedesc[proc]): string		619
nim	toCType	seeya.html#toCType,typedesc[proc],string,bool	proc toCType(T: typedesc[proc]; name: string; procArg: bool): string		628
nimgrp	totypedefs	seeya.html#toTypeDefs-procs-all	proc		353
nimgrp	toctype	seeya.html#toCType-procs-all	proc		369
